"""
Django settings for kestesikz project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&b0+q0f*+4z+ruo)u#%yy$!-o2h+qq7zq-vmzd!157s)2p&ye('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


SESSION_COOKIE_SECURE = True
MY_DOMAIN = 'bilimge.kz'
SESSION_COOKIE_DOMAIN = MY_DOMAIN
ALLOWED_HOSTS = [MY_DOMAIN, 'www.' + MY_DOMAIN,'185.100.67.208', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'auth_user.apps.AuthConfig',
    'admin_app',
    'client',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'colorfield',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'djoser',
    'django_db_logger',
    'drf_spectacular',
    'generate_schedule.apps.GenerateScheduleConfig',
    'instagram_parsing.apps.InstagramParsingConfig',
    'debug_toolbar',
    'fcm_django'
]

FCM_DJANGO_SETTINGS = {
    "FCM_SERVER_KEY": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCeDFKj9jC+KHzR\npTD7CBWT21GMt5M0PBajJ1JmvJC1d+wyAy797iBsOHdutTAciKgBv4bWy+13pomn\nC1yTotEBnM6iLT5Y+gOPEjkYn8U1CxKiFCwBhm7CK/1OfMnTUFG6Fy7bl7Epj03X\n+jyHmt3+PqSCo9wVseD1s1++ra/6u6SzFD7MhYQ6Q/ccsH15cWHV48l5M5S59fNO\nh0oLgmP40aALJMcDdw015S5QiMQ+nGgO4uGDnVZyTQRcgJBnmH76DfxfEV2bkHZu\nLaNS1y9pKlkoWa+vzs8ESAaX6mMmx4qwE4nCVR3eLUHQZ7LBSKvasm0w+WCz99e1\nLeL9gwzvAgMBAAECggEALpVaPEqBhmLfm1kxrSPuXDSt/ihTgnddgrxBzNcyXdJZ\nc0o97QllVBB2n1JXOmnK/yzo/OGBfh0/gFVYdYltSijiPKnSMR6Lsv0/h/L7iM1Z\nMh149QAfICsgD6S3Rgnr9MoFfSLiTGoZGxn+AkgSu2/SRFEwutJBiJnUlBqUfnWe\nnBTSGZKbhbzvNbt5SzJVnBtSmFiU0E365E2b2tU+TPpMZOG9l4sTR5xD/nyV0m2x\n5tu3QpA+5SVoVwh0oeZlgjAaKvQoPzjJz+4h9n9ZbKyv6UwOTZMMt9ZV+zQGXsnB\nwcAOTZh/LAzmdjMuInlA1rO/yxSl0n6gVmMgNyDCOQKBgQDJU2GTtsi9XrX/cK34\n2i545Il/sROs449hSODJ+1PPvg14KhfGuq2+mkHc8OfcX6e9mrp2uNn4ECUFtmuT\neOuWHcM+WYwsWYcua0FppFJWttk14evgcmjGtZez8kkuJZQ4xB3zX1jTM1zfNnYk\nZ3U0Hapi3xOZLpH435raaHSElwKBgQDI+C/aXAc0M/BYNekgB7uANKv5/YSvcPPK\neBiQ5t1bU0GdwTqO8QzA5g8itps8bKLFjHLsakZ0L5ejMqHD09Foy+PXhqwbYQVn\nhHAInG5iQUE7r+wwIwb3I8S6ZZ43sN3Af1ItojKtl9CjBb9gRmsrdIe4D7GC2xeM\nRLa8S4sNaQKBgHXgYC2AxCA8qAscCoC+Hp+iD++32nFL+9NWPGeGxBfKi1BkNO+i\ntb/3ycB3PQqG50vYoHyK1vSrX0HtASejkSyf2IVVIQGGmePP4Mjd8WfcP2mREe6k\njjxqbpxpq/ddAWALVA3/MZ7XX/VBigLeoH0XMYAaZPs3jThOk/h1WGOZAoGAJcXw\nSJyPhhJVFF9dp/WMGnbL9DrgW5FhYSbdhy69YFLvvFT7Sq6n9QHIyn+EAgFxPqw9\nVY5MG75uQ/BaU1JWw9m+w12+r46201QjMpskbDdTqYJRZGLRBlakvVwoNtN5eprz\nuTwJRnOIdXu5EsFpl0tZzxC0DqJbdLPdnNqeEjECgYBrZ2w2/WDoHJIG79MikJF0\nl1uJ55izwwcqxcQKvZcsxLB8ZWJpvbysAWd45bo06kl53xdhC5L48TTTH4M1UgYE\nGAgScY2fnV40oMmrjA5JKyvJY+lxRqr7mKAnuAM1kOitANGfFmw8DpPkGbYNokUt\nekaSfT90GtMprCTX5peqiw==\n-----END PRIVATE KEY-----\n"
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
    },
    'handlers': {
        'db_log': {
            'level': 'DEBUG',
            'class': 'django_db_logger.db_log_handler.DatabaseLogHandler'
        },
    },
    'loggers': {
        'db': {
            'handlers': ['db_log'],
            'level': 'DEBUG'
        },
        'django.request': { # logging 500 errors to database
            'handlers': ['db_log'],
            'level': 'ERROR',
            'propagate': False,
        }
    }
}


# AUTH
AUTH_USER_MODEL = 'auth_user.User'
AUTHENTICATION_BACKENDS = ['auth_user.backends.EmailOrUsernameModelBackend']


REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],

    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic'
        },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        },
        'Session': {
            'type': 'apiKey',
            'name': 'Cookie',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': True,
    'LOGIN_URL': 'rest_framework:login',
    'LOGOUT_URL': 'rest_framework:logout',
}

DJOSER = {
    # 'PASSWORD_RESET_CONFIRM_URL': '#/password/reset/confirm/{uid}/{token}',
    # 'USERNAME_RESET_CONFIRM_URL': '#/username/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': '#/activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SERIALIZERS': {},
}
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware"
]

CORS_ALLOW_ALL_ORIGINS = True
ROOT_URLCONF = 'kestesikz.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kestesikz.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'kestesikz',
	'USER': 'kestesikz',
	'PASSWORD': 'kestesikz',
	'HOST': 'localhost',
	'PORT': '5432',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

SPECTACULAR_SETTINGS = {
    'TITLE': 'Keste.kz API',
    'DESCRIPTION': 'Your project description',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # OTHER SETTINGS
}


AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Almaty'

USE_I18N = True
    
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

INTERNAL_IPS = [
    # ...
    "185.100.67.208",
    "www.bilimge.kz"
    # ...
]
STATIC_URL = 'static/'
STATIC_ROOT = '/var/www/kestesikz/static'
import os
MEDIA_URL = '/media/'
MEDIA_ROOT = '/var/www/zzz/media/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'  # Адрес SMTP-сервера Яндекса
EMAIL_PORT = 587  # Порт SMTP-сервера Яндекса
EMAIL_USE_TLS = True  # Использовать TLS для безопасного подключения
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'akimzhankonarbayev@yandex.ru'  # Ваша учетная запись на Яндексе
EMAIL_HOST_PASSWORD = 'qfvweuxgqayzptfz'

REDIS_URL = "redis://redis:6379/1"
CELERY_BROKER_URL = 'redis://redis:6379/1'
CELERY_RESULT_BACKEND = 'redis://redis:6379/1'

